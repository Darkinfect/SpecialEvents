package me.dark_infect.specialevents.classes;


import org.bukkit.*;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public class InvulnerabilityManager {
        private final JavaPlugin plugin;
        private final Map<UUID, BukkitRunnable> invulnerablePlayers = new HashMap<>();
        private final Map<UUID, Integer> effectTasks = new HashMap<>();

        public InvulnerabilityManager(JavaPlugin plugin) {
            this.plugin = plugin;
        }

        public void makeInvulnerable(Player player, int durationSeconds, String reason) {
            UUID uuid = player.getUniqueId();

            cancelInvulnerability(player);

            player.setInvulnerable(true);
            player.sendMessage("§aВы получили неуязвимость на " + durationSeconds + " секунд! §7(" + reason + ")");

            startVisualEffects(player, durationSeconds);

            BukkitRunnable task = new BukkitRunnable() {
                @Override
                public void run() {
                    removeInvulnerability(player);
                    player.sendMessage("§7Неуязвимость закончилась!");
                }
            };
            task.runTaskLater(plugin, durationSeconds * 20L);

            invulnerablePlayers.put(uuid, task);
        }

        private void startVisualEffects(Player player, int durationSeconds) {
            BukkitRunnable effectTask = new BukkitRunnable() {
                int ticks = 0;

                @Override
                public void run() {
                    if (!player.isOnline() || !player.isInvulnerable()) {
                        this.cancel();
                        return;
                    }

                    Location loc = player.getLocation();
                    World world = player.getWorld();

                    world.spawnParticle(Particle.END_ROD, loc.clone().add(0, 1, 0), 10, 0.5, 0.5, 0.5, 0.1);
                    world.spawnParticle(Particle.FIREWORK, loc.clone().add(0, 0.5, 0), 5, 0.3, 0.3, 0.3, 0.05);

                    if (ticks % 20 == 0) {
                        world.spawnParticle(Particle.FLASH, loc.clone().add(0, 1, 0), 1, 0, 0, 0, 0);
                        player.playSound(loc, Sound.BLOCK_BEACON_AMBIENT, 0.3f, 1.5f);
                    }

                    if (ticks % 100 == 0) {
                        createShieldEffect(player);
                    }

                    ticks++;
                }
            };
            effectTask.runTaskTimer(plugin, 0L, 1L);
            effectTasks.put(player.getUniqueId(), effectTask.getTaskId());
        }

        private void createShieldEffect(Player player) {
            Location loc = player.getLocation();
            World world = player.getWorld();

            for (int i = 0; i < 360; i += 15) {
                double angle = Math.toRadians(i);
                double x = Math.cos(angle) * 1.5;
                double z = Math.sin(angle) * 1.5;
                Location particleLoc = loc.clone().add(x, 1, z);

                world.spawnParticle(Particle.DRAGON_BREATH, particleLoc, 1, 0, 0, 0, 0.1);
            }

            player.playSound(loc, Sound.ITEM_ARMOR_EQUIP_DIAMOND, 0.7f, 1.2f);
            player.playSound(loc, Sound.BLOCK_BEACON_ACTIVATE, 0.5f, 1.0f);
        }

        public void removeInvulnerability(Player player) {
            UUID uuid = player.getUniqueId();

            player.setInvulnerable(false);

            cancelEffects(player);

            BukkitRunnable task = invulnerablePlayers.remove(uuid);
            if (task != null) {
                task.cancel();
            }
            Location loc = player.getLocation();
            player.getWorld().spawnParticle(Particle.CLOUD, loc, 20, 0.5, 0.5, 0.5, 0.2);
            player.playSound(loc, Sound.BLOCK_BEACON_DEACTIVATE, 0.8f, 1.0f);
        }
        private void cancelEffects(Player player) {
            Integer taskId = effectTasks.remove(player.getUniqueId());
            if (taskId != null) {
                Bukkit.getScheduler().cancelTask(taskId);
            }
        }

        public void cancelInvulnerability(Player player) {
            if (isInvulnerable(player)) {
                removeInvulnerability(player);
                player.sendMessage("§7Неуязвимость отменена!");
            }
        }

        public boolean isInvulnerable(Player player) {
            return invulnerablePlayers.containsKey(player.getUniqueId());
        }

        public int getRemainingTime(Player player) {
            BukkitRunnable task = invulnerablePlayers.get(player.getUniqueId());
            if (task != null && !task.isCancelled()) {
                return task.getTaskId();
            }
            return 0;
        }
    }

